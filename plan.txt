
OpenTofu used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

OpenTofu will perform the following actions:

[1m  # aws_ce_anomaly_monitor.service_monitor[0m will be created
[0m  [32m+[0m[0m resource "aws_ce_anomaly_monitor" "service_monitor" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m monitor_dimension = "SERVICE"
      [32m+[0m[0m monitor_type      = "DIMENSIONAL"
      [32m+[0m[0m name              = "AWSServiceMonitor"
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Owner" = "team-spend"
        }
    }

[1m  # aws_ce_anomaly_subscription.anomaly_subscription_20[0m will be created
[0m  [32m+[0m[0m resource "aws_ce_anomaly_subscription" "anomaly_subscription_20" {
      [32m+[0m[0m account_id       = (known after apply)
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m frequency        = "IMMEDIATE"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m monitor_arn_list = (known after apply)
      [32m+[0m[0m name             = "TeamSpend20"
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Owner" = "team-spend"
        }

      [32m+[0m[0m subscriber {
          [32m+[0m[0m address = "arn:aws:sns:eu-west-2:778666285893:team-spend-alert"
          [32m+[0m[0m type    = "SNS"
        }

      [32m+[0m[0m threshold_expression {
          [32m+[0m[0m dimension {
              [32m+[0m[0m key           = "ANOMALY_TOTAL_IMPACT_ABSOLUTE"
              [32m+[0m[0m match_options = [
                  [32m+[0m[0m "GREATER_THAN_OR_EQUAL",
                ]
              [32m+[0m[0m values        = [
                  [32m+[0m[0m "1",
                ]
            }
        }
    }

[1m  # aws_ce_anomaly_subscription.anomaly_subscription_40[0m will be created
[0m  [32m+[0m[0m resource "aws_ce_anomaly_subscription" "anomaly_subscription_40" {
      [32m+[0m[0m account_id       = (known after apply)
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m frequency        = "IMMEDIATE"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m monitor_arn_list = (known after apply)
      [32m+[0m[0m name             = "TeamSpend40"
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Owner" = "team-spend"
        }

      [32m+[0m[0m subscriber {
          [32m+[0m[0m address = "arn:aws:sns:eu-west-2:778666285893:team-spend-alert"
          [32m+[0m[0m type    = "SNS"
        }

      [32m+[0m[0m threshold_expression {
          [32m+[0m[0m dimension {
              [32m+[0m[0m key           = "ANOMALY_TOTAL_IMPACT_ABSOLUTE"
              [32m+[0m[0m match_options = [
                  [32m+[0m[0m "GREATER_THAN_OR_EQUAL",
                ]
              [32m+[0m[0m values        = [
                  [32m+[0m[0m "2",
                ]
            }
        }
    }

[1m  # aws_ce_anomaly_subscription.anomaly_subscription_60[0m will be created
[0m  [32m+[0m[0m resource "aws_ce_anomaly_subscription" "anomaly_subscription_60" {
      [32m+[0m[0m account_id       = (known after apply)
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m frequency        = "IMMEDIATE"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m monitor_arn_list = (known after apply)
      [32m+[0m[0m name             = "TeamSpend60"
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Owner" = "team-spend"
        }

      [32m+[0m[0m subscriber {
          [32m+[0m[0m address = "arn:aws:sns:eu-west-2:778666285893:team-spend-alert"
          [32m+[0m[0m type    = "SNS"
        }

      [32m+[0m[0m threshold_expression {
          [32m+[0m[0m dimension {
              [32m+[0m[0m key           = "ANOMALY_TOTAL_IMPACT_ABSOLUTE"
              [32m+[0m[0m match_options = [
                  [32m+[0m[0m "GREATER_THAN_OR_EQUAL",
                ]
              [32m+[0m[0m values        = [
                  [32m+[0m[0m "3",
                ]
            }
        }
    }

[1m  # aws_ce_anomaly_subscription.anomaly_subscription_80[0m will be created
[0m  [32m+[0m[0m resource "aws_ce_anomaly_subscription" "anomaly_subscription_80" {
      [32m+[0m[0m account_id       = (known after apply)
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m frequency        = "IMMEDIATE"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m monitor_arn_list = (known after apply)
      [32m+[0m[0m name             = "TeamSpend80"
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Owner" = "team-spend"
        }

      [32m+[0m[0m subscriber {
          [32m+[0m[0m address = "arn:aws:sns:eu-west-2:778666285893:team-spend-alert"
          [32m+[0m[0m type    = "SNS"
        }

      [32m+[0m[0m threshold_expression {
          [32m+[0m[0m dimension {
              [32m+[0m[0m key           = "ANOMALY_TOTAL_IMPACT_ABSOLUTE"
              [32m+[0m[0m match_options = [
                  [32m+[0m[0m "GREATER_THAN_OR_EQUAL",
                ]
              [32m+[0m[0m values        = [
                  [32m+[0m[0m "4",
                ]
            }
        }
    }

[1m  # aws_ce_anomaly_subscription.anomaly_subscription_action[0m will be created
[0m  [32m+[0m[0m resource "aws_ce_anomaly_subscription" "anomaly_subscription_action" {
      [32m+[0m[0m account_id       = (known after apply)
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m frequency        = "IMMEDIATE"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m monitor_arn_list = (known after apply)
      [32m+[0m[0m name             = "TeamSpendAction"
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Owner" = "team-spend"
        }

      [32m+[0m[0m subscriber {
          [32m+[0m[0m address = "arn:aws:sns:eu-west-2:778666285893:team-spend-alert"
          [32m+[0m[0m type    = "SNS"
        }

      [32m+[0m[0m threshold_expression {
          [32m+[0m[0m dimension {
              [32m+[0m[0m key           = "ANOMALY_TOTAL_IMPACT_ABSOLUTE"
              [32m+[0m[0m match_options = [
                  [32m+[0m[0m "GREATER_THAN_OR_EQUAL",
                ]
              [32m+[0m[0m values        = [
                  [32m+[0m[0m "5",
                ]
            }
        }
    }

[1m  # aws_iam_role.terraform_function_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "terraform_function_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "lambda.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "terraform_function_role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Owner" = "team-spend"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_iam_role_policy_attachment.terraform_lambda_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "terraform_lambda_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      [32m+[0m[0m role       = "terraform_function_role"
    }

[1m  # aws_lambda_function.terraform_function[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "terraform_function" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m function_name                  = "team-spend-action"
      [32m+[0m[0m handler                        = "index.js"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m image_uri                      = "778666285893.dkr.ecr.eu-west-2.amazonaws.com/team-spend-action:latest"
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 128
      [32m+[0m[0m package_type                   = "Image"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m runtime                        = "nodejs8.10"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "team" = "spend"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Owner" = "team-spend"
          [32m+[0m[0m "team"  = "spend"
        }
      [32m+[0m[0m timeout                        = 3
      [32m+[0m[0m version                        = (known after apply)
    }

[1m  # aws_sns_topic.team_spend_action[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic" "team_spend_action" {
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m beginning_archive_time      = (known after apply)
      [32m+[0m[0m content_based_deduplication = false
      [32m+[0m[0m fifo_topic                  = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m name                        = "team-spend_action"
      [32m+[0m[0m name_prefix                 = (known after apply)
      [32m+[0m[0m owner                       = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m signature_version           = (known after apply)
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Owner" = "team-spend"
        }
      [32m+[0m[0m tracing_config              = (known after apply)
    }

[1m  # aws_sns_topic.team_spend_alert[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic" "team_spend_alert" {
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m beginning_archive_time      = (known after apply)
      [32m+[0m[0m content_based_deduplication = false
      [32m+[0m[0m fifo_topic                  = false
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m name                        = "team-spend-alert"
      [32m+[0m[0m name_prefix                 = (known after apply)
      [32m+[0m[0m owner                       = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m signature_version           = (known after apply)
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Owner" = "team-spend"
        }
      [32m+[0m[0m tracing_config              = (known after apply)
    }

[1m  # aws_sns_topic_subscription.team_spend_action_email_subscription[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic_subscription" "team_spend_action_email_subscription" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m confirmation_timeout_in_minutes = 1
      [32m+[0m[0m confirmation_was_authenticated  = (known after apply)
      [32m+[0m[0m endpoint                        = "alpha@beta.delta"
      [32m+[0m[0m endpoint_auto_confirms          = false
      [32m+[0m[0m filter_policy_scope             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m owner_id                        = (known after apply)
      [32m+[0m[0m pending_confirmation            = (known after apply)
      [32m+[0m[0m protocol                        = "email"
      [32m+[0m[0m raw_message_delivery            = false
      [32m+[0m[0m topic_arn                       = "arn:aws:sns:eu-west-2:778666285893:team-spend-action"
    }

[1m  # aws_sns_topic_subscription.team_spend_action_lambda_subscription[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic_subscription" "team_spend_action_lambda_subscription" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m confirmation_timeout_in_minutes = 1
      [32m+[0m[0m confirmation_was_authenticated  = (known after apply)
      [32m+[0m[0m endpoint                        = "arn:aws:lambda:eu-west-2:778666285893:function:team-spend-action"
      [32m+[0m[0m endpoint_auto_confirms          = false
      [32m+[0m[0m filter_policy_scope             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m owner_id                        = (known after apply)
      [32m+[0m[0m pending_confirmation            = (known after apply)
      [32m+[0m[0m protocol                        = "lambda"
      [32m+[0m[0m raw_message_delivery            = false
      [32m+[0m[0m topic_arn                       = "arn:aws:sns:eu-west-2:778666285893:team-spend-action"
    }

[1m  # aws_sns_topic_subscription.team_spend_alert_email_subscription[0m will be created
[0m  [32m+[0m[0m resource "aws_sns_topic_subscription" "team_spend_alert_email_subscription" {
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m confirmation_timeout_in_minutes = 1
      [32m+[0m[0m confirmation_was_authenticated  = (known after apply)
      [32m+[0m[0m endpoint                        = "alpha@beta.delta"
      [32m+[0m[0m endpoint_auto_confirms          = false
      [32m+[0m[0m filter_policy_scope             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m owner_id                        = (known after apply)
      [32m+[0m[0m pending_confirmation            = (known after apply)
      [32m+[0m[0m protocol                        = "email"
      [32m+[0m[0m raw_message_delivery            = false
      [32m+[0m[0m topic_arn                       = "arn:aws:sns:eu-west-2:778666285893:team-spend-alert"
    }

[1mPlan:[0m 14 to add, 0 to change, 0 to destroy.
[0m